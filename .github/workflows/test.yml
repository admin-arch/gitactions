name: Validate Pull Request

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
   yamllint:
       name: 'Validate Yamls Using Yamllint'
       runs-on: ubuntu-latest
       steps:
       - name: 'Checkout'          
         uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
         with:
             token: ${{ secrets.GH_TOKEN }}
             fetch-depth: 0

       - name: Find Helm chart and non-chart YAML directories
         run: |
           # Find Helm chart directories (those that contain Chart.yaml)
           find . -type f -name "Chart.yaml" -exec dirname {} \; | sort -u > charts.txt

           # Find all directories with ANY .yaml files
           find . -type f -name "*.yaml" -exec dirname {} \; | sort -u > all-yaml-dirs.txt

           # Subtract chart dirs from all yaml dirs to get non-chart yaml dirs
           grep -vxFf charts.txt all-yaml-dirs.txt > non-chart-yaml-dirs.txt
           grep -v "/templates" non-chart-yaml-dirs.txt > non-chart-yaml-tmp-dirs.txt
           echo "Found Helm charts in:"
           cat charts.txt

           echo "Found non-chart YAML directories:"
           cat non-chart-yaml-tmp-dirs.txt

       - name: Lint non-chart YAML files
         run: |
           # pip install yamllint
           docker pull github/super-linter:latest

           while IFS= read -r dir; do
             echo "Linting YAML files in $dir"
             # yamllint "$dir"
             docker run -e RUN_LOCAL=true -e VALIDATE_YAML=true -v "$(pwd)/$dir":"$dir" github/super-linter:latest
           done < non-chart-yaml-tmp-dirs.txt

       # - name: Get list of changed files
       #   id: changed-files
       #   run: |
       #       # git fetch origin ${{ github.base_ref }}:refs/remotes/origin/${{ github.base_ref }}
       #       git diff --name-only --diff-filter=AM origin/${{ github.base_ref }}...${{ github.sha }} > changed_files.txt
       #       cat changed_files.txt
       #       changed_files=$(cat changed_files.txt | grep '\.yaml$' || true)
       #       echo "::set-output name=changed_files::$(echo $changed_files | tr '\n' ' ')"
        
       # - name: Find Helm chart directories
       #   run: |
       #     find . -type f -name "Chart.yaml" -exec dirname {} \; | sort -u > charts.txt
       #     cat charts.txt
       
       # - name: Set up Helm
       #   uses: azure/setup-helm@v3
       #   with:
       #     version: v3.14.0

       # - name: Lint Helm charts
       #   run: |
       #     while IFS= read -r chart_dir; do
       #       echo "Linting $chart_dir"
       #       helm lint "$chart_dir"
       #     done < charts.txt
