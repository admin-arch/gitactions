name: Validate Pull Request

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Install yamllint
        run: pip install yamllint

      - name: Get changed files
        id: changed
        run: |
          git fetch origin ${{ github.base_ref }}
          # git diff --name-only origin/${{ github.base_ref }}...HEAD > changed_files.txt
          git diff --name-only --diff-filter=AM origin/${{ github.base_ref }}...${{ github.sha }} > changed_files.txt
          echo "Changed files:"
          cat changed_files.txt

      - name: Run yamllint on changed YAML files
        run: |
          grep '\.ya\?ml$' changed_files.txt | grep -v '^.*templates/.*' > changed-yaml.txt || true
          if [ -s changed-yaml.txt ]; then
            echo "Linting regular YAML files..."
            # yamllint -f github $(cat changed-yaml.txt)
            yamllint -c .yamllint-config.yaml $(cat changed-yaml.txt)
          else
            echo "No regular YAML files to lint."
          fi

      - name: Find changed Helm charts
        run: |
          grep 'Chart.yaml' changed_files.txt | xargs -I{} dirname {} | sort -u > changed-charts.txt || true
          echo "Detected Helm charts:"
          cat changed-charts.txt || echo "None found"

      - name: Run helm template + yamllint
        run: |
          if [ -s changed-charts.txt ]; then
            while IFS= read -r chart_dir; do
              echo "Rendering chart: $chart_dir"
              helm template "$chart_dir" > rendered.yaml || exit 1
              echo "Linting rendered chart output..."
              yamllint -f github rendered.yaml || exit 1
            done < changed-charts.txt
          else
            echo "No Helm charts changed."
          fi
# jobs:
#    yamllint:
#        name: 'Validate Yamls Using Yamllint'
#        runs-on: ubuntu-latest
#        steps:
#        - name: 'Checkout'          
#          uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
#          with:
#              token: ${{ secrets.GH_TOKEN }}
#              fetch-depth: 0

#        - name: Find Helm chart and non-chart YAML directories
#          run: |
#            # Find Helm chart directories (those that contain Chart.yaml)
#            find . -type f -name "Chart.yaml" -exec dirname {} \; | sort -u > charts.txt

#            # Find all directories with ANY .yaml files
#            find . -type f -name "*.yaml" -exec dirname {} \; | sort -u > all-yaml-dirs.txt
#            # Subtract chart dirs from all yaml dirs to get non-chart yaml dirs
#            grep -vxFf charts.txt all-yaml-dirs.txt |  grep -vE '^\.$|/templates' > yaml.txt
#            # grep -v "/templates" non-chart-yaml-dirs.txt > non-chart-yaml-tmp-dirs.txt
#            # grep -v '^\.$' non-chart-yaml-tmp-dirs.txt > yaml.txt
#            # grep -vE '^\.$|/templates' non-chart-yaml-dirs.txt > yaml.txt
#            find . -maxdepth 1 -type f -name "*.yaml" > root-yaml.txt
#            echo "Found Helm charts in:"
#            cat charts.txt

#            echo "Found non-chart YAML directories:"
#            cat root-yaml.txt >> yaml.txt
#            cat yaml.txt

#        - name: Lint non-chart YAML files
#          run: |
#            pip install yamllint
#            # docker pull github/super-linter:latest

#            while IFS= read -r dir; do
#              echo "Linting YAML files in $dir"
#              yamllint -c .yamllint-config.yaml "$dir"
#              # yamllint "$dir"
#              # docker run -e RUN_LOCAL=true -e VALIDATE_YAML=true -v "$(pwd)/$dir":"$dir" github/super-linter:latest
#            done < yaml.txt

#        - name: Get list of changed files
#          id: changed-files
#          run: |
#              # git fetch origin ${{ github.base_ref }}:refs/remotes/origin/${{ github.base_ref }}
#              git diff --name-only --diff-filter=AM origin/${{ github.base_ref }}...${{ github.sha }} > changed_files.txt
#              cat changed_files.txt
#              changed_files=$(cat changed_files.txt | grep '\.yaml$' || true)
#              echo "::set-output name=changed_files::$(echo $changed_files | tr '\n' ' ')"
        
       # - name: Find Helm chart directories
       #   run: |
       #     find . -type f -name "Chart.yaml" -exec dirname {} \; | sort -u > charts.txt
       #     cat charts.txt
       
       # - name: Set up Helm
       #   uses: azure/setup-helm@v3
       #   with:
       #     version: v3.14.0

       # - name: Lint Helm charts
       #   run: |
       #     while IFS= read -r chart_dir; do
       #       echo "Linting $chart_dir"
       #       helm lint "$chart_dir"
       #     done < charts.txt
